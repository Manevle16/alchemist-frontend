{"version":3,"sources":["img/alembic.png","views/Footer/index.tsx","walletServices.js","Web3Context/index.tsx","contracts/getTokenBalances.ts","views/Widget/utils.ts","views/UserWallet/index.tsx","components/CancelButton.tsx","views/UserAddress/index.tsx","views/Header/index.tsx","contracts/utils.ts","contracts/aludelAbi.ts","contracts/crucibleFactoryAbi.ts","contracts/transmuterAbi.ts","contracts/alchemist.ts","views/Widget/TabContent/Panes/Mint/OperatePane.tsx","views/Widget/TabContent/Panes/Mint/index.tsx","contracts/getOwnedCrucibles.ts","contracts/unstakeAndClaim.ts","contracts/sendNFT.ts","contracts/withdraw.ts","views/Widget/TabContent/Panes/Operate/OperatePane.tsx","views/Widget/TabContent/Panes/Operate/index.tsx","views/Widget/index.tsx","views/Body/index.tsx","layouts/index.tsx","config/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","links","label","href","isExternal","Footer","as","py","flexDirection","justifyContent","alignItems","textAlign","fontWeight","fontSize","color","spacing","map","key","rel","_hover","borderBottomColor","borderBottomWidth","rpcUrl","dappId","process","REACT_APP_API_URL","REACT_APP_STAGING","Web3Context","React","createContext","web3","onboard","wallet","address","readyToTransact","a","provider","signer","monitorTx","undefined","Web3Provider","props","useState","setAddress","setProvider","setNetwork","setEtherBalance","setSigner","setWallet","setOnboard","notify","setNotify","walletSelect","walletCheck","ready","hash","emitter","on","transaction","message","console","log","useEffect","subscriptions","network","balance","ethersProvider","ethers","providers","getSigner","window","localStorage","setItem","name","Onboard","hideBranding","networkId","wallets","walletName","appUrl","email","disableNotifications","appName","apiKey","infuraKey","checkName","minimumBalance","Notify","previouslySelectedWallet","getItem","Provider","value","children","getTokenBalances","getAddress","walletAddress","lp","Contract","IERC20","abi","balanceOf","token","formatUnits","alchemist","toMaxDecimalsRound","n","step","amount","Number","replace","factor","nRound","Math","round","isFinite","UserAddress","useContext","tokenBalance","setTokenBalance","balances","style","height","width","minWidth","marginTop","className","display","marginBottom","CancelButton","fill","margin","handleClick","onClick","border","outline","Object","keys","length","cursor","pointerEvents","viewBox","xmlns","xmlnsXlink","d","buttonBgColor","useColorModeValue","background","variant","boxShadow","borderRadius","mr","substring","marginLeft","walletReset","Header","useColorMode","colorMode","toggleColorMode","isDarkMode","buttonHoverBgColor","src","LOGO","alt","icon","aria-label","signPermission","method","vault","owner","delegateAddress","tokenAddress","vaultNonce","chainId","getNetwork","domain","version","verifyingContract","types","type","delegate","nonce","_signTypedData","signedPermission","signPermitEIP2612","spenderAddress","deadline","nonces","values","spender","sig","splitSignature","v","r","s","inputs","internalType","components","stateMutability","anonymous","indexed","outputs","mintAndLock","rawAmount","args","aludel","crucibleFactory","transmuter","aludelAbi","getAludelData","stakingToken","IUniswapV2ERC20","crucibleFactoryAbi","transmuterAbi","parseUnits","decimals","salt","randomBytes","getBlock","timestamp","Error","getTemplate","predictDeterministicAddress","Crucible","crucible","permit","permission","mintCruciblePermitAndStake","tx","alert","OperatePane","handleInputChange","isConnected","lpBalance","setLpBalance","alertBgColor","mb","status","borderWidth","borderColor","role","placement","_focus","size","onChange","ev","target","toString","placeholder","mt","h","then","isFullWidth","px","Operate","errorMsg","form","crucibleFactoryAddress","filter","filters","Transfer","queryFilter","crucibleEvents","crucibles","data","id","tokenId","toHexString","lockedBalance","getBalanceLocked","Promise","all","unstakeAndClaim","crucibleAddress","recipient","getNonce","populateTransaction","populatedTx","sendTransaction","unstakeTx","transferERC20","withdrawTx","sendNFT","to","BigNumber","from","withdraw","ethereum","lock","sub","amount2Withdraw","setAmount2Withdraw","sendAddress","setSendAddress","modalIsOpen","setModalIsOpen","modalOperation","setModalOperation","selectedCrucible","setSelectedCrucible","lnBalance","tbtcBalance","linearFee","constantFee","nodeAddress","formValues","setCrucibles","getOwnedCrucibles","unstake","withdrawTokens","cruciblesCardBg","sendModal","isOpen","onClose","bg","p","fonSize","isAttached","Widget","cardBgColor","tabsBgColor","shadow","isFitted","borderTopLeftRadius","borderTopRightRadius","_selected","maxH","Body","inProp","setInProp","CSSTransition","in","timeout","classNames","Layout","bgColor","minHeight","backgroundColor","flexGrow","customTheme","extendTheme","config","initialColorMode","useSystemColorMode","colors","green","50","100","200","300","400","500","600","700","800","900","fonts","heading","body","Heading","baseStyle","Link","textDecoration","Alert","theme","radii","Input","Button","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.955786cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alembic.9eeae33d.png\";","import { Box, Flex, HStack, Link, Text } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nconst links = [\n  {\n    label: \"Code\",\n    href: \"https://github.com/alchemist-community/alchemist-frontend\",\n    isExternal: true,\n  },\n  {\n    label: \"Discord\",\n    href: \"http://discord.alchemist.wtf\",\n    isExternal: true,\n  },\n  {\n    label: \"FAQ\",\n    href: \"https://hackmd.io/@thegostep/BJ40PSVQd\",\n    isExternal: true,\n  },\n  {\n    label: \"Governance\",\n    href: \"https://cast.alchemist.wtf\",\n    isExternal: true,\n  },\n];\n\nconst Footer: React.FC = () => {\n  return (\n    <Box as=\"footer\">\n      <Flex\n        py={8}\n        flexDirection={[\"column\", \"column\", \"row\"]}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        as=\"footer\"\n      >\n        <Box textAlign={[\"center\", \"center\", \"initial\"]}>\n          <Text fontWeight=\"bold\" fontSize=\"md\">\n            alchemist.farm\n          </Text>\n          <Text fontSize=\"sm\" color=\"gray.500\">\n            Searching for the philosopher's stone\n          </Text>\n        </Box>\n        <Box>\n          <HStack spacing={4}>\n            {links.map(({ href, isExternal, label }) => (\n              <Link\n                py={1}\n                key={label}\n                href={href}\n                fontSize=\"sm\"\n                isExternal={isExternal}\n                rel=\"noopener noreferrer\"\n                _hover={{\n                  color: \"green.300\",\n                  borderBottomColor: \"green.300\",\n                  borderBottomWidth: 1,\n                }}\n              >\n                {label}\n              </Link>\n            ))}\n          </HStack>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import Notify from 'bnc-notify'\nimport Onboard from 'bnc-onboard'\n\nconst networkId = 1\nconst rpcUrl = \"https://mainnet.infura.io/v3/965c5ec028c84ffcb22c799eddba83a4\"\nconst apiUrl = process.env.REACT_APP_API_URL\nconst staging = process.env.REACT_APP_STAGING\nconst dappId = 'd5b4fc8d-04d7-4a94-aaef-4bbeb83af2c9'\n\nexport function initOnboard(subscriptions) {\n  return Onboard({\n    dappId,\n    hideBranding: false,\n    networkId,\n    // darkMode: true,\n    subscriptions,\n    walletSelect: {\n      wallets: [\n        { walletName: 'metamask' },\n        {\n          walletName: 'trezor',\n          appUrl: 'https://reactdemo.blocknative.com',\n          email: 'aaron@blocknative.com',\n          rpcUrl\n        },\n        {\n          walletName: 'ledger',\n          rpcUrl\n        },\n        { walletName: 'authereum', disableNotifications: true },\n        {\n          walletName: 'lattice',\n          appName: 'Onboard Demo',\n          rpcUrl\n        },\n        { walletName: 'coinbase' },\n        { walletName: 'status' },\n        { walletName: 'walletLink', rpcUrl },\n        {\n          walletName: 'portis',\n          apiKey: 'b2b7586f-2b1e-4c30-a7fb-c2d1533b153b'\n        },\n        { walletName: 'fortmatic', apiKey: 'pk_test_886ADCAB855632AA' },\n        { walletName: 'torus' },\n        { walletName: 'trust', rpcUrl },\n        {\n          walletName: 'walletConnect',\n          infuraKey: 'd5e29c9b9a9d4116a7348113f57770a8'\n        },\n        { walletName: 'opera' },\n        { walletName: 'operaTouch' },\n        { walletName: 'imToken', rpcUrl },\n        { walletName: 'meetone' },\n        { walletName: 'mykey', rpcUrl },\n        { walletName: 'wallet.io', rpcUrl },\n        { walletName: 'huobiwallet', rpcUrl },\n        { walletName: 'hyperpay' },\n        { walletName: 'atoken' },\n        { walletName: 'liquality' },\n        { walletName: 'frame' },\n      ]\n    },\n    walletCheck: [\n      { checkName: 'derivationPath' },\n      { checkName: 'connect' },\n      { checkName: 'accounts' },\n      { checkName: 'network' },\n      { checkName: 'balance', minimumBalance: '100000' }\n    ]\n  })\n}\n\nexport function initNotify() {\n  return Notify({\n    dappId,\n    networkId,\n  })\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport { Web3Provider as Web3ProviderType } from \"../ethereum\";\nimport { initNotify, initOnboard } from \"../walletServices\";\n\nconst Web3Context = React.createContext<{\n  web3: Web3ProviderType;\n  address: null | string;\n  onboard: any;\n  wallet: any;\n  readyToTransact: () => Promise<boolean>;\n  provider: any;\n  signer: any;\n  monitorTx: (hash: string) => Promise<void>;\n}>({\n  web3: null,\n  onboard: null,\n  wallet: null,\n  address: null,\n  readyToTransact: async () => false,\n  provider: null,\n  signer: null,\n  monitorTx: async () => undefined,\n});\n\nconst Web3Provider: React.FC = (props) => {\n  const [web3, setWeb3] = useState<Web3ProviderType>(null);\n  const [address, setAddress] = useState<string | null>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [network, setNetwork] = useState<any>(null);\n  const [etherBalance, setEtherBalance] = useState<any>(null);\n  const [signer, setSigner] = useState<any>();\n  const [wallet, setWallet] = useState<any>({});\n  const [onboard, setOnboard] = useState<any>(null);\n  const [notify, setNotify] = useState<any>(null);\n\n  useEffect(() => {\n    const onboard = initOnboard({\n      address: setAddress,\n      network: setNetwork,\n      balance: setEtherBalance,\n      wallet: (wallet: any) => {\n        if (wallet.provider) {\n          setWallet(wallet);\n          const ethersProvider = new ethers.providers.Web3Provider(\n            wallet.provider\n          );\n          setProvider(ethersProvider);\n          setSigner(ethersProvider.getSigner());\n          window.localStorage.setItem(\"selectedWallet\", wallet.name);\n        } else {\n          setProvider(null);\n          setWallet({});\n        }\n      },\n    });\n\n    setOnboard(onboard);\n    setNotify(initNotify());\n  }, []);\n\n  useEffect(() => {\n    const previouslySelectedWallet = window.localStorage.getItem(\n      \"selectedWallet\"\n    );\n\n    if (previouslySelectedWallet && onboard) {\n      onboard.walletSelect(previouslySelectedWallet);\n    }\n  }, [onboard]);\n\n  async function readyToTransact(): Promise<boolean> {\n    if (!provider) {\n      const walletSelected = await onboard.walletSelect();\n      if (!walletSelected) return false;\n    }\n\n    const ready = await onboard.walletCheck();\n    return ready;\n  }\n  async function monitorTx(hash: string) {\n    const { emitter } = notify.hash(hash);\n    interface Transaction {\n      hash: string;\n    }\n    emitter.on(\"txPool\", (transaction: Transaction) => {\n      return {\n        message: `Your transaction is pending, click <a href=\"https://mainnet.etherscan.io/tx/${transaction.hash}\" rel=\"noopener noreferrer\" target=\"_blank\">here</a> for more info.`,\n        // onclick: () =>\n        //   window.open(`https://mainnet.etherscan.io/tx/${transaction.hash}`)\n      };\n    });\n\n    emitter.on(\"txSent\", console.log);\n    emitter.on(\"txConfirmed\", console.log);\n    emitter.on(\"txSpeedUp\", console.log);\n    emitter.on(\"txCancel\", console.log);\n    emitter.on(\"txFailed\", console.log);\n  }\n\n  return (\n    <Web3Context.Provider\n      value={{\n        address,\n        onboard,\n        web3,\n        wallet,\n        readyToTransact,\n        signer,\n        provider,\n        monitorTx,\n      }}\n    >\n      {props.children}\n    </Web3Context.Provider>\n  );\n};\n\nexport { Web3Provider };\n\nexport default Web3Context;\n","import { ethers } from \"ethers\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport IERC20 from \"./IERC20.json\";\n\nexport async function getTokenBalances(signer: any) {\n  const walletAddress = await signer.getAddress();\n\n  const lp = new ethers.Contract(\n    \"0xCD6bcca48069f8588780dFA274960F15685aEe0e\",\n    IERC20.abi,\n    signer\n  ).balanceOf(walletAddress);\n\n  const token = new ethers.Contract(\n    \"0x88ACDd2a6425c3FaAE4Bc9650Fd7E27e0Bebb7aB\",\n    IERC20.abi,\n    signer\n  ).balanceOf(walletAddress);\n\n  return {\n    alchemist: formatUnits(await token),\n    lp: formatUnits(await lp),\n  };\n}\n","import { createHash } from \"crypto\";\n\nexport const toMaxDecimalsFloor = (n: number | string, step: number) => {\n  const amount = typeof n === \"string\" ? Number(n.replace(\",\", \".\")) : n;\n  //let factor = Number('1e' + decimals)\n  let nRound = Math.floor(amount * step) / step;\n  return !isFinite(nRound) ? 0 : nRound;\n};\n\nexport const toMaxDecimalsRound = (n: number | string, step: number) => {\n  const amount = typeof n === \"string\" ? Number(n.replace(\",\", \".\")) : n;\n  if (step <= 0) return amount;\n  //let factor = Number('1e' + decimals)\n  let factor = 1 / step;\n  let nRound = Math.round(amount * factor) / factor;\n  return !isFinite(nRound) ? 0 : nRound;\n};\n\nexport function convertToUint(amount: string, tokenDecimals: number) {\n  let [int, decimals] = amount.split(\".\");\n  decimals = decimals ?? \"\";\n  int = int.replace(/^0+/, \"\");\n  decimals = decimals.padEnd(tokenDecimals, \"0\");\n  if (decimals.length > tokenDecimals) {\n    throw new Error(\"Too many decimals were provided\");\n  }\n  return int + decimals;\n}\n\nexport function addDecimalsToUint(amount: string, tokenDecimals: number) {\n  const padded = amount.padStart(tokenDecimals + 1, \"0\");\n  const decimals = padded.substr(-tokenDecimals).replace(/0+$/, \"\");\n  let int = padded.substr(0, padded.length - tokenDecimals).replace(/^0+/, \"\");\n  if (int === \"\") {\n    int = \"0\";\n  }\n  if (decimals === \"\") {\n    return int;\n  } else {\n    return `${int}.${decimals}`;\n  }\n}\n\nexport function sha256(buffer: Buffer) {\n  return createHash(\"sha256\").update(buffer).digest(\"hex\");\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Web3Context from \"../../Web3Context\";\nimport { getTokenBalances } from \"../../contracts/getTokenBalances\";\nimport { toMaxDecimalsRound } from \"../Widget/utils\";\n\nexport default function UserAddress() {\n  const { signer, address } = useContext(Web3Context);\n  const [tokenBalance, setTokenBalance] = useState<{\n    alchemist: string;\n    lp: string;\n  }>();\n\n  useEffect(() => {\n    (async () => {\n      const balances = await getTokenBalances(signer);\n      setTokenBalance(balances);\n    })();\n  }, [signer]);\n\n  return (\n    <>\n      <div\n        style={{\n          flexDirection: \"column\",\n          height: \"auto\",\n          width: \"100%\",\n          minWidth: \"0px\",\n          marginTop: \"1rem\",\n        }}\n        className={`header__connect connect connect--${\n          address ? \"success\" : \"no\"\n        }`}\n      >\n        <div style={{ display: \"block\", marginBottom: \"0.3125rem\" }}>\n          My wallet\n        </div>\n        {tokenBalance ? (\n          <>\n            <div style={{ display: \"block\", width: \"100%\" }}>\n              <span style={{ fontWeight: \"bold\" }}>Alchemist: </span>\n              <span>{toMaxDecimalsRound(tokenBalance.alchemist, 0.01)} ⚗️</span>\n            </div>\n            <div style={{ display: \"block\", width: \"100%\" }}>\n              <span style={{ fontWeight: \"bold\" }}>LP: </span>\n              <span>{toMaxDecimalsRound(tokenBalance.lp, 0.01)} ⚗️/ETH</span>\n            </div>\n          </>\n        ) : (\n          <span>Loading...</span>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\ntype CancelProps = {\n  fill?: string;\n  width?: string;\n  height?: string;\n  margin: object;\n  handleClick: () => void;\n};\nconst CancelButton = ({\n  fill = \"#000A28\",\n  width = \"16px\",\n  height = \"16px\",\n  margin = {},\n  handleClick,\n}: CancelProps) => (\n  <button\n    onClick={handleClick}\n    style={{ border: \"none\", outline: \"none\", ...(Object.keys(margin).length && {...margin}) }}\n    className=\"reset\"\n  >\n    <svg\n      style={{\n        cursor: \"pointerEvent\",\n        pointerEvents: \"none\",\n      }}\n      width={width}\n      height={height}\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <path\n        d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\"\n        fill={fill}\n      />\n    </svg>\n  </button>\n);\n\nexport default CancelButton;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Web3Context from \"../../Web3Context\";\nimport { Text, Button, Box, useColorModeValue } from \"@chakra-ui/react\";\nimport {CancelButton} from '../../components'\n\nexport default function UserAddress() {\n  const { wallet, address, onboard } = useContext(Web3Context);\n\n  const handleClick = () =>\n    !wallet.provider ? onboard.walletSelect() : null\n\n  const buttonBgColor = useColorModeValue(\"white\", \"gray.700\");\n\n  return (\n    <>\n      <Button\n        onClick={(handleClick)}\n        background={buttonBgColor}\n        variant=\"muted\"\n        boxShadow=\"md\"\n        borderRadius=\"lg\"\n      >\n        <Text fontSize=\"sm\" color=\"gray.500\" mr={2}>\n          {address ? \"Mainnet:\" : \"Connect Wallet\"}\n        </Text>\n        {address && (\n          <>\n            <Text fontSize=\"sm\" mr={4}>\n              {address.substring(0, 6) +\n                \"...\" +\n                address.substring(address.length - 4)}\n            </Text>\n\n          </>\n        )}\n        <Box\n          background={address ? \"green.400\" : \"gray.400\"}\n          borderRadius=\"100%\"\n          width={3}\n          height={3}\n        />\n        {wallet.provider && <CancelButton margin={{marginLeft: \"8px\"}} width=\"14px\" height=\"14px\" handleClick={()=>onboard.walletReset()}/>}\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport UserWallet from \"../UserWallet\";\nimport UserAddress from \"../UserAddress\";\nimport LOGO from \"../../img/alembic.png\";\nimport Web3Context from \"../../Web3Context\";\nimport { Image } from \"@chakra-ui/image\";\nimport { IconButton } from \"@chakra-ui/button\";\nimport { FiSun, FiMoon } from \"react-icons/fi\";\nimport { useColorMode, useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { Box, Flex, LinkBox, LinkOverlay } from \"@chakra-ui/layout\";\n\nconst Header: React.FC = () => {\n  const { address } = React.useContext(Web3Context);\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const isDarkMode = colorMode === \"dark\";\n  const buttonHoverBgColor = useColorModeValue(\"gray.100\", \"gray.700\");\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" py={4}>\n      <LinkBox>\n        <LinkOverlay href=\"/\">\n          <Image\n            src={LOGO}\n            width={[\"50px\", \"50px\", \"70px\"]}\n            alt=\"alchemist logo\"\n          />\n        </LinkOverlay>\n      </LinkBox>\n      <Box>\n        <IconButton\n          mr={2}\n          borderRadius=\"lg\"\n          variant=\"ghost\"\n          onClick={toggleColorMode}\n          icon={isDarkMode ? <FiMoon /> : <FiSun />}\n          aria-label={isDarkMode ? \"Toggle light mode\" : \"Toggle dark mode\"}\n          _hover={{ background: buttonHoverBgColor }}\n        />\n        <UserAddress />\n        {address !== null ? <UserWallet /> : null}\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import { TypedDataField } from \"@ethersproject/abstract-signer\";\nimport {\n  BigNumberish,\n  Contract,\n  ContractFactory,\n  Signer,\n  Wallet,\n} from \"ethers\";\nimport { splitSignature } from \"ethers/lib/utils\";\n\nexport const signPermission = async (\n  method: string,\n  vault: Contract,\n  owner: Signer,\n  delegateAddress: string,\n  tokenAddress: string,\n  amount: BigNumberish,\n  vaultNonce: BigNumberish,\n  chainId?: BigNumberish\n) => {\n  // get chainId\n  chainId = chainId || (await vault.provider.getNetwork()).chainId;\n  // craft permission\n  const domain = {\n    name: \"UniversalVault\",\n    version: \"1.0.0\",\n    chainId: chainId,\n    verifyingContract: vault.address,\n  };\n  const types = {} as Record<string, TypedDataField[]>;\n  types[method] = [\n    { name: \"delegate\", type: \"address\" },\n    { name: \"token\", type: \"address\" },\n    { name: \"amount\", type: \"uint256\" },\n    { name: \"nonce\", type: \"uint256\" },\n  ];\n  const value = {\n    delegate: delegateAddress,\n    token: tokenAddress,\n    amount: amount,\n    nonce: vaultNonce,\n  };\n  // sign permission\n  // todo: add fallback if wallet does not support eip 712 rpc\n  const signedPermission = await (owner as any)._signTypedData(\n    domain,\n    types,\n    value\n  );\n  // return\n  return signedPermission;\n};\n\nexport const signPermitEIP2612 = async (\n  owner: Signer,\n  walletAddress: string,\n  token: Contract,\n  spenderAddress: string,\n  value: BigNumberish,\n  deadline: BigNumberish,\n  nonce?: BigNumberish\n) => {\n  // get nonce\n  nonce = nonce || (await token.nonces(walletAddress));\n  // get chainId\n  const chainId = (await token.provider.getNetwork()).chainId;\n  // get domain\n  const domain = {\n    name: \"Uniswap V2\",\n    version: \"1\",\n    chainId: chainId,\n    verifyingContract: token.address,\n  };\n  // get types\n  const types = {} as Record<string, TypedDataField[]>;\n  types[\"Permit\"] = [\n    { name: \"owner\", type: \"address\" },\n    { name: \"spender\", type: \"address\" },\n    { name: \"value\", type: \"uint256\" },\n    { name: \"nonce\", type: \"uint256\" },\n    { name: \"deadline\", type: \"uint256\" },\n  ];\n  // get values\n  const values = {\n    owner: walletAddress,\n    spender: spenderAddress,\n    value: value,\n    nonce: nonce,\n    deadline: deadline,\n  };\n  // sign permission\n  // todo: add fallback if wallet does not support eip 712 rpc\n  const signedPermission = await (owner as any)._signTypedData(\n    domain,\n    types,\n    values\n  );\n  // split signature\n  const sig = splitSignature(signedPermission);\n  // return\n  return [\n    values.owner,\n    values.spender,\n    values.value,\n    values.deadline,\n    sig.v,\n    sig.r,\n    sig.s,\n  ];\n};\n","export default [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"ownerAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"rewardPoolFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"powerSwitchFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"stakingToken\", type: \"address\" },\n      { internalType: \"address\", name: \"rewardToken\", type: \"address\" },\n      {\n        components: [\n          { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardScaling\",\n        name: \"rewardScaling\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"rewardPool\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"powerSwitch\",\n        type: \"address\",\n      },\n    ],\n    name: \"AludelCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AludelFunded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"BonusTokenRegistered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"vault\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RewardClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"vault\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Staked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"vault\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Unstaked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"factory\",\n        type: \"address\",\n      },\n    ],\n    name: \"VaultFactoryRegistered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"factory\",\n        type: \"address\",\n      },\n    ],\n    name: \"VaultFactoryRemoved\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BASE_SHARES_PER_WEI\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REWARD_TOKENS\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_STAKES_PER_VAULT\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"stakeAmount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"stakeDuration\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n      {\n        components: [\n          { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardScaling\",\n        name: \"rewardScaling\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"calculateReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.StakeData[]\",\n        name: \"stakes\",\n        type: \"tuple[]\",\n      },\n      { internalType: \"uint256\", name: \"unstakeAmount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n      {\n        components: [\n          { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardScaling\",\n        name: \"rewardScaling\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"calculateRewardFromStakes\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"lastStakeAmount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"newStakesCount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"reward\", type: \"uint256\" },\n          {\n            internalType: \"uint256\",\n            name: \"newTotalStakeUnits\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IAludel.RewardOutput\",\n        name: \"out\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"end\", type: \"uint256\" },\n    ],\n    name: \"calculateStakeUnits\",\n    outputs: [{ internalType: \"uint256\", name: \"stakeUnits\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.StakeData[]\",\n        name: \"stakes\",\n        type: \"tuple[]\",\n      },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"calculateTotalStakeUnits\",\n    outputs: [\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"duration\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"shares\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardSchedule[]\",\n        name: \"rewardSchedules\",\n        type: \"tuple[]\",\n      },\n      { internalType: \"uint256\", name: \"rewardBalance\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"sharesOutstanding\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"calculateUnlockedRewards\",\n    outputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"duration\", type: \"uint256\" },\n    ],\n    name: \"fund\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getAludelData\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"stakingToken\", type: \"address\" },\n          { internalType: \"address\", name: \"rewardToken\", type: \"address\" },\n          { internalType: \"address\", name: \"rewardPool\", type: \"address\" },\n          {\n            components: [\n              { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n            ],\n            internalType: \"struct IAludel.RewardScaling\",\n            name: \"rewardScaling\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"rewardSharesOutstanding\",\n            type: \"uint256\",\n          },\n          { internalType: \"uint256\", name: \"totalStake\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"lastUpdate\", type: \"uint256\" },\n          {\n            components: [\n              { internalType: \"uint256\", name: \"duration\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"shares\", type: \"uint256\" },\n            ],\n            internalType: \"struct IAludel.RewardSchedule[]\",\n            name: \"rewardSchedules\",\n            type: \"tuple[]\",\n          },\n        ],\n        internalType: \"struct IAludel.AludelData\",\n        name: \"aludel\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"getBonusTokenAtIndex\",\n    outputs: [{ internalType: \"address\", name: \"bonusToken\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBonusTokenSetLength\",\n    outputs: [{ internalType: \"uint256\", name: \"length\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"stakeAmount\", type: \"uint256\" },\n    ],\n    name: \"getCurrentStakeReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentTotalStakeUnits\",\n    outputs: [\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentUnlockedRewards\",\n    outputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    name: \"getCurrentVaultReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    name: \"getCurrentVaultStakeUnits\",\n    outputs: [{ internalType: \"uint256\", name: \"stakeUnits\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"stakeAmount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"getFutureStakeReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" }],\n    name: \"getFutureTotalStakeUnits\",\n    outputs: [\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" }],\n    name: \"getFutureUnlockedRewards\",\n    outputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"getFutureVaultReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"getFutureVaultStakeUnits\",\n    outputs: [{ internalType: \"uint256\", name: \"stakeUnits\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPowerController\",\n    outputs: [{ internalType: \"address\", name: \"controller\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPowerSwitch\",\n    outputs: [\n      { internalType: \"address\", name: \"powerSwitch\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    name: \"getVaultData\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"totalStake\", type: \"uint256\" },\n          {\n            components: [\n              { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n            ],\n            internalType: \"struct IAludel.StakeData[]\",\n            name: \"stakes\",\n            type: \"tuple[]\",\n          },\n        ],\n        internalType: \"struct IAludel.VaultData\",\n        name: \"vaultData\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"getVaultFactoryAtIndex\",\n    outputs: [{ internalType: \"address\", name: \"factory\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getVaultFactorySetLength\",\n    outputs: [{ internalType: \"uint256\", name: \"length\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isOffline\",\n    outputs: [{ internalType: \"bool\", name: \"status\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isOnline\",\n    outputs: [{ internalType: \"bool\", name: \"status\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isShutdown\",\n    outputs: [{ internalType: \"bool\", name: \"status\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"target\", type: \"address\" }],\n    name: \"isValidAddress\",\n    outputs: [{ internalType: \"bool\", name: \"validity\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"target\", type: \"address\" }],\n    name: \"isValidVault\",\n    outputs: [{ internalType: \"bool\", name: \"validity\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rageQuit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"bonusToken\", type: \"address\" }],\n    name: \"registerBonusToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"factory\", type: \"address\" }],\n    name: \"registerVaultFactory\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"factory\", type: \"address\" }],\n    name: \"removeVaultFactory\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"rescueTokensFromRewardPool\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"stake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"unstakeAndClaim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","export default [\n  {\n    inputs: [{ internalType: \"address\", name: \"template\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"instance\",\n        type: \"address\",\n      },\n    ],\n    name: \"InstanceAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"instance\",\n        type: \"address\",\n      },\n    ],\n    name: \"InstanceRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"baseURI\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"\", type: \"bytes\" }],\n    name: \"create\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"create\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" }],\n    name: \"create2\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"\", type: \"bytes\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n    ],\n    name: \"create2\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"getApproved\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getTemplate\",\n    outputs: [{ internalType: \"address\", name: \"template\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"instanceAt\",\n    outputs: [{ internalType: \"address\", name: \"instance\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"instanceCount\",\n    outputs: [{ internalType: \"uint256\", name: \"count\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"instance\", type: \"address\" }],\n    name: \"isInstance\",\n    outputs: [{ internalType: \"bool\", name: \"validity\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"ownerOf\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\n    name: \"supportsInterface\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"tokenByIndex\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"tokenURI\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","export default [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"aludel\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleOwner\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"mintCrucibleAndStake\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"aludel\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleOwner\", type: \"address\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n      {\n        components: [\n          { internalType: \"address\", name: \"owner\", type: \"address\" },\n          { internalType: \"address\", name: \"spender\", type: \"address\" },\n          { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n          { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n          { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n          { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n        ],\n        internalType: \"struct TransmuterV1.Permit\",\n        name: \"permit\",\n        type: \"tuple\",\n      },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"mintCruciblePermitAndStake\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"\", type: \"bytes\" },\n    ],\n    name: \"onERC721Received\",\n    outputs: [{ internalType: \"bytes4\", name: \"\", type: \"bytes4\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"aludel\", type: \"address\" },\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      {\n        components: [\n          { internalType: \"address\", name: \"owner\", type: \"address\" },\n          { internalType: \"address\", name: \"spender\", type: \"address\" },\n          { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n          { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n          { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n          { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n        ],\n        internalType: \"struct TransmuterV1.Permit\",\n        name: \"permit\",\n        type: \"tuple\",\n      },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"permitAndStake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"master\", type: \"address\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n      { internalType: \"address\", name: \"deployer\", type: \"address\" },\n    ],\n    name: \"predictDeterministicAddress\",\n    outputs: [{ internalType: \"address\", name: \"instance\", type: \"address\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"aludel\", type: \"address\" },\n          { internalType: \"address\", name: \"vault\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n        ],\n        internalType: \"struct TransmuterV1.StakeRequest[]\",\n        name: \"requests\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"stakeMulti\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"aludel\", type: \"address\" },\n          { internalType: \"address\", name: \"vault\", type: \"address\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n        ],\n        internalType: \"struct TransmuterV1.UnstakeRequest[]\",\n        name: \"requests\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"unstakeMulti\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import IUniswapV2ERC20 from \"@uniswap/v2-core/build/IUniswapV2ERC20.json\";\nimport { ethers } from \"ethers\";\nimport { formatEther, parseUnits, randomBytes } from \"ethers/lib/utils\";\nimport { signPermission, signPermitEIP2612 } from \"./utils\";\nimport aludelAbi from \"./aludelAbi\";\nimport crucibleFactoryAbi from \"./crucibleFactoryAbi\";\nimport transmuterAbi from \"./transmuterAbi\";\nimport Crucible from \"./Crucible.json\";\n\nexport async function mintAndLock(\n  signer: any,\n  provider: any,\n  rawAmount: string\n): Promise<string> {\n  const args = {\n    aludel: \"0xf0D415189949d913264A454F57f4279ad66cB24d\",\n    crucibleFactory: \"0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56\",\n    transmuter: \"0xB772ce9f14FC7C7db0D4525aDb9349FBD7ce456a\",\n    amount: rawAmount,\n  };\n  const walletAddress = await signer.getAddress();\n  // fetch contracts\n\n  const aludel = new ethers.Contract(args.aludel, aludelAbi, signer);\n  //const aludel = await ethers.getContractAt('Aludel', args.aludel, signer)\n  const stakingToken = new ethers.Contract(\n    (await aludel.getAludelData()).stakingToken,\n    IUniswapV2ERC20.abi,\n    signer\n  );\n  const crucibleFactory = new ethers.Contract(\n    args.crucibleFactory,\n    crucibleFactoryAbi,\n    signer\n  );\n  const transmuter = new ethers.Contract(\n    args.transmuter,\n    transmuterAbi,\n    signer\n  );\n\n  // declare config\n\n  const amount = parseUnits(args.amount, await stakingToken.decimals());\n  const salt = randomBytes(32);\n  const deadline = (await provider.getBlock(\"latest\")).timestamp + 60 * 60 * 24;\n\n  // validate balances\n  if ((await stakingToken.balanceOf(walletAddress)) < amount) {\n    throw new Error(\"Not enough balance\");\n  }\n\n  // craft permission\n\n  const crucible = new ethers.Contract(\n    await transmuter.predictDeterministicAddress(\n      await crucibleFactory.getTemplate(),\n      salt,\n      crucibleFactory.address\n    ),\n    Crucible.abi,\n    signer\n  );\n\n  console.log(\"Sign Permit\");\n\n  const permit = await signPermitEIP2612(\n    signer,\n    walletAddress,\n    stakingToken,\n    transmuter.address,\n    amount,\n    deadline\n  );\n\n  console.log(\"Sign Lock\");\n\n  const permission = await signPermission(\n    \"Lock\",\n    crucible,\n    signer,\n    aludel.address,\n    stakingToken.address,\n    amount,\n    0\n  );\n\n  console.log(\"Mint, Deposit, Stake\");\n  try {\n    const tx = await transmuter.mintCruciblePermitAndStake(\n      aludel.address,\n      crucibleFactory.address,\n      walletAddress,\n      salt,\n      permit,\n      permission\n    );\n    console.log(\"  in\", tx.hash);\n    return tx.hash;\n  } catch (e) {\n    alert(e);\n    throw e;\n  }\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Web3Context from \"../../../../../Web3Context\";\nimport { toMaxDecimalsRound } from \"../../../utils\";\nimport { mintAndLock } from \"../../../../../contracts/alchemist\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { Alert } from \"@chakra-ui/alert\";\nimport { Button, IconButton } from \"@chakra-ui/button\";\nimport { Link, Text } from \"@chakra-ui/layout\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { getTokenBalances } from \"../../../../../contracts/getTokenBalances\";\nimport {\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@chakra-ui/popover\";\nimport { FiInfo } from \"react-icons/fi\";\n\ninterface OperatePaneProps {\n  handleInputChange?: (form: { [key: string]: string | number }) => void;\n  isConnected: boolean;\n}\n\nconst OperatePane: React.FC<OperatePaneProps> = (props) => {\n  const { handleInputChange = () => null, isConnected } = props;\n\n  // Todo: type the extended web3context\n  const { onboard, signer, provider, readyToTransact, monitorTx } = useContext(\n    Web3Context\n  );\n\n  const [lpBalance, setLpBalance] = useState(\"\");\n\n  const onChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    //setXAmount is the amount displayed in the input, should be string\n    const name = ev.target.name;\n    let value = ev.target.value;\n    if (ev.target.type === \"number\")\n      value =\n        ev.target.value === \"\"\n          ? ev.target.value\n          : toMaxDecimalsRound(ev.target.value, +ev.target.step).toString();\n\n    setLpBalance(value);\n  };\n\n  useEffect(() => {\n    handleInputChange({\n      lpBalance,\n    });\n  }, [lpBalance, handleInputChange]);\n\n  const alertBgColor = useColorModeValue(\"gray.50\", \"gray.600\");\n\n  return (\n    <>\n      <Alert\n        mb={8}\n        status=\"info\"\n        borderWidth={1}\n        borderRadius=\"lg\"\n        borderColor=\"green.300\"\n        background={alertBgColor}\n      >\n        <Text>\n          First you will need to provide liquidity to the{\" \"}\n          <span role=\"img\" aria-label=\"alembic\">\n            ⚗️\n          </span>\n          /ETH pair on Uniswap through{\" \"}\n          <Link\n            isExternal\n            href=\"https://app.uniswap.org/#/add/0x88acdd2a6425c3faae4bc9650fd7e27e0bebb7ab/ETH\"\n          >\n            this\n          </Link>\n          .\n        </Text>\n      </Alert>\n\n      <FormControl mb={4}>\n        <FormLabel>\n          LP Balance\n          <Popover placement=\"right-start\">\n            <PopoverTrigger>\n              <IconButton\n                aria-label=\"info\"\n                variant=\"ghost\"\n                icon={<FiInfo />}\n                _hover={{ background: \"transparent\", color: \"green.300\" }}\n                _focus={{ border: \"none\" }}\n              />\n            </PopoverTrigger>\n            <PopoverContent _focus={{ outline: \"none\" }}>\n              <PopoverArrow />\n              <PopoverBody>How many LP tokens you want to stake.</PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            size=\"lg\"\n            variant=\"filled\"\n            _focus={{ borderColor: \"green.300\" }}\n            value={lpBalance}\n            onChange={onChange}\n            name=\"lpBalance\"\n            placeholder=\"0.0\"\n            type=\"number\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button\n              mr={2}\n              mt={2}\n              h=\"2rem\"\n              variant=\"ghost\"\n              onClick={() =>\n                getTokenBalances(signer).then(({ lp }) => setLpBalance(lp))\n              }\n            >\n              Max\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      {/* Todo: Make this button reusable, repeated styles */}\n      {isConnected ? (\n        <Button\n          size=\"lg\"\n          isFullWidth\n          color=\"white\"\n          background=\"green.300\"\n          _focus={{ boxShadow: \"none\" }}\n          _hover={{ background: \"green.400\" }}\n          onClick={async () => {\n            await readyToTransact();\n            const hash: string = await mintAndLock(signer, provider, lpBalance);\n            monitorTx(hash);\n          }}\n        >\n          Stake\n        </Button>\n      ) : (\n        <Button\n          size=\"lg\"\n          isFullWidth\n          color=\"white\"\n          background=\"green.300\"\n          _focus={{ boxShadow: \"none\" }}\n          _hover={{ background: \"green.400\" }}\n          onClick={() => onboard.walletSelect()}\n        >\n          Connect Wallet\n        </Button>\n      )}\n      <Text color=\"gray.500\" mt={4} px={2}>\n        Ledger wallets on Metamask don't support the signature types required,\n        so they won't work. See{\" \"}\n        <Link\n          color=\"green.300\"\n          href=\"https://github.com/MetaMask/metamask-extension/issues/10240\"\n          isExternal\n        >\n          the github issue\n        </Link>{\" \"}\n        for more info.\n      </Text>\n    </>\n  );\n};\n\nexport default OperatePane;\n","import React, { useState, useContext } from \"react\";\nimport OperatePane from \"./OperatePane\";\nimport Web3Context from \"../../../../../Web3Context\";\nimport { convertToUint } from \"../../../utils\";\nimport BN from \"bn.js\";\n\nconst Operate: React.FC = () => {\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const { wallet } = useContext(Web3Context);\n\n  if (!!errorMsg) {\n    return <span>{errorMsg}</span>;\n  } else {\n    return (\n      <OperatePane\n        handleInputChange={(form) => {}}\n        isConnected={!!wallet.provider}\n      />\n    );\n  }\n};\n\nexport default Operate;\n","import { ethers } from \"ethers\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport crucibleFactoryAbi from \"./crucibleFactoryAbi\";\nimport Crucible from \"./Crucible.json\";\nimport IERC20 from \"./IERC20.json\";\n\nexport async function getOwnedCrucibles(signer: any, provider: any) {\n  const crucibleFactoryAddress = \"0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56\";\n  const walletAddress = await signer.getAddress();\n\n  const token = new ethers.Contract(\n    \"0xCD6bcca48069f8588780dFA274960F15685aEe0e\",\n    IERC20.abi,\n    signer\n  );\n  const crucibleFactory = new ethers.Contract(\n    crucibleFactoryAddress,\n    crucibleFactoryAbi,\n    signer\n  );\n  const filter = crucibleFactory.filters.Transfer(null, walletAddress);\n  const crucibleEvents = await crucibleFactory.queryFilter(filter, 0, \"latest\");\n  const crucibles = crucibleEvents.map(async (data) => {\n    const id = (data.args!.tokenId as ethers.BigNumber).toHexString();\n    const crucible = new ethers.Contract(id, Crucible.abi, signer);\n    const balance = token.balanceOf(crucible.address).then(formatUnits);\n    const lockedBalance = crucible\n      .getBalanceLocked(\"0xCD6bcca48069f8588780dFA274960F15685aEe0e\")\n      .then(formatUnits); // LP token\n    return {\n      id,\n      balance: await balance,\n      lockedBalance: await lockedBalance,\n    };\n  });\n  return await Promise.all(crucibles);\n}\n","import IUniswapV2ERC20 from \"@uniswap/v2-core/build/IUniswapV2ERC20.json\";\nimport { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { signPermission } from \"./utils\";\nimport aludelAbi from \"./aludelAbi\";\nimport Crucible from \"./Crucible.json\";\n\nexport async function unstakeAndClaim(\n  signer: any,\n  monitorTx: (hash: string) => Promise<any>,\n  crucibleAddress: string,\n  rawAmount: string\n) {\n  const walletAddress = await signer.getAddress();\n\n  const args = {\n    crucible: crucibleAddress,\n    aludel: \"0xf0D415189949d913264A454F57f4279ad66cB24d\",\n    recipient: walletAddress,\n    amount: rawAmount,\n  };\n\n  // fetch contracts\n\n  const aludel = new ethers.Contract(args.aludel, aludelAbi, signer);\n  const stakingToken = new ethers.Contract(\n    (await aludel.getAludelData()).stakingToken,\n    IUniswapV2ERC20.abi,\n    signer\n  );\n  const crucible = new ethers.Contract(args.crucible, Crucible.abi, signer);\n  // declare config\n\n  const amount = parseUnits(args.amount, await stakingToken.decimals());\n  const nonce = await crucible.getNonce();\n  const recipient = args.recipient;\n\n  // validate balances\n\n  if ((await stakingToken.balanceOf(crucible.address)) < amount) {\n    throw new Error(\"stop being poor\");\n  }\n\n  // craft permission\n\n  console.log(\"Sign Unlock permission\");\n\n  const permission = await signPermission(\n    \"Unlock\",\n    crucible,\n    signer,\n    aludel.address,\n    stakingToken.address,\n    amount,\n    nonce\n  );\n\n  console.log(\"Unstake and Claim\");\n\n  const populatedTx = await aludel.populateTransaction.unstakeAndClaim(\n    crucible.address,\n    recipient,\n    amount,\n    permission\n  );\n\n  const unstakeTx = await signer.sendTransaction(populatedTx);\n  monitorTx(unstakeTx.hash);\n  console.log(\"  in\", unstakeTx.hash);\n\n  console.log(\"Withdraw from crucible\");\n\n  const withdrawTx = await crucible.transferERC20(\n    stakingToken.address,\n    recipient,\n    amount\n  );\n\n  monitorTx(withdrawTx.hash);\n\n  console.log(\"  in\", withdrawTx?.hash);\n}\n","import { ethers } from \"ethers\";\nimport crucibleFactoryAbi from \"./crucibleFactoryAbi\";\n\nexport async function sendNFT(signer: any, id: string, to: string) {\n  const crucibleFactoryAddress = \"0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56\";\n  const walletAddress = await signer.getAddress();\n\n  const crucibleFactory = new ethers.Contract(\n    crucibleFactoryAddress,\n    crucibleFactoryAbi,\n    signer\n  );\n\n  await crucibleFactory[\"safeTransferFrom(address,address,uint256)\"](\n    walletAddress,\n    to,\n    ethers.BigNumber.from(id)\n  );\n}\n","import { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport Crucible from \"./Crucible.json\";\nimport IERC20 from \"./IERC20.json\";\n\nexport async function withdraw(crucibleAddress: string, rawAmount: string) {\n  const provider = new ethers.providers.Web3Provider((window as any).ethereum);\n  const signer = provider.getSigner();\n\n  const walletAddress = await signer.getAddress();\n\n  const args = {\n    crucible: crucibleAddress,\n    token: \"0xCD6bcca48069f8588780dFA274960F15685aEe0e\",\n    recipient: walletAddress,\n    amount: rawAmount,\n  };\n\n  // fetch contracts\n\n  const token = new ethers.Contract(args.token, IERC20.abi, signer);\n  const crucible = new ethers.Contract(args.crucible, Crucible.abi, signer);\n\n  // declare config\n\n  const amount = parseUnits(args.amount, 18);\n  const recipient = args.recipient;\n\n  // validate balances\n\n  const balance = await token.balanceOf(crucible.address);\n  const lock = await crucible.getBalanceLocked(token.address);\n  if (balance.sub(lock) < amount) {\n    throw new Error(\"ser unlock pls\");\n  }\n\n  console.log(\"Withdraw from crucible\");\n\n  const withdrawTx = await crucible.transferERC20(\n    token.address,\n    recipient,\n    amount\n  );\n\n  console.log(\"  in\", withdrawTx.hash);\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { toMaxDecimalsRound } from \"../../../utils\";\nimport Web3Context from \"../../../../../Web3Context\";\nimport { getOwnedCrucibles } from \"../../../../../contracts/getOwnedCrucibles\";\nimport { unstakeAndClaim } from \"../../../../../contracts/unstakeAndClaim\";\nimport { sendNFT } from \"../../../../../contracts/sendNFT\";\nimport { withdraw } from \"../../../../../contracts/withdraw\";\nimport { Button, ButtonGroup } from \"@chakra-ui/button\";\nimport { Badge, Box, Flex, HStack, Text } from \"@chakra-ui/layout\";\nimport { FaLock } from \"react-icons/fa\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/modal\";\nimport { Input } from \"@chakra-ui/input\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\ninterface OperatePaneProps {\n  handleInputChange?: (form: { [key: string]: string | number }) => void;\n  isConnected: boolean;\n}\n\nconst OperatePane: React.FC<OperatePaneProps> = (props) => {\n  const { handleInputChange = () => null, isConnected } = props;\n\n  const { onboard, signer, provider, monitorTx } = useContext(Web3Context);\n\n  const [amount2Withdraw, setAmount2Withdraw] = useState(\"\");\n  const [sendAddress, setSendAddress] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalOperation, setModalOperation] = useState<\n    \"withdraw\" | \"unstake\" | \"send\"\n  >(\"unstake\");\n  const [selectedCrucible, setSelectedCrucible] = useState(\"\");\n\n  const [formValues, setFormValues] = useState({\n    lnBalance: \"\",\n    tbtcBalance: \"\",\n    linearFee: \"\",\n    constantFee: \"\",\n    nodeAddress: \"\",\n  });\n\n  const [crucibles, setCrucibles] = useState(\n    [] as {\n      id: string;\n      balance: string;\n      lockedBalance: string;\n    }[]\n  );\n  useEffect(() => {\n    if (signer) {\n      getOwnedCrucibles(signer, provider).then(setCrucibles);\n    }\n  }, [isConnected, provider, signer]);\n\n  const onChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    //setXAmount is the amount displayed in the input, should be string\n    const name = ev.target.name;\n    let value = ev.target.value;\n    if (ev.target.type === \"number\")\n      value =\n        ev.target.value === \"\"\n          ? ev.target.value\n          : toMaxDecimalsRound(ev.target.value, +ev.target.step).toString();\n\n    setFormValues((old) => {\n      return {\n        ...old,\n        [name]: value,\n      };\n    });\n  };\n\n  useEffect(() => {\n    handleInputChange(formValues);\n  }, [formValues, handleInputChange]);\n\n  //todo\n  const formatAmount2Withdraw = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    let amount = ev.target.value;\n\n    setAmount2Withdraw(amount);\n  };\n\n  //todo\n  const unstake = async () => {\n    await unstakeAndClaim(signer, monitorTx, selectedCrucible, amount2Withdraw);\n    setModalIsOpen(false);\n  };\n  const withdrawTokens = async () => {\n    await withdraw(selectedCrucible, amount2Withdraw);\n    setModalIsOpen(false);\n  };\n\n  const cruciblesCardBg = useColorModeValue(\"white\", \"gray.600\");\n\n  const sendModal = (\n    <Modal isOpen onClose={() => setModalIsOpen(false)}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Send</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <FormControl mb={4}>\n            <FormLabel>Address</FormLabel>\n            <Input\n              size=\"lg\"\n              variant=\"filled\"\n              _focus={{ borderColor: \"green.300\" }}\n              value={sendAddress}\n              onChange={(ev) => setSendAddress(ev.target.value)}\n              name=\"address\"\n              type=\"string\"\n            />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button\n            bg=\"green.300\"\n            color=\"white\"\n            mr={3}\n            onClick={async () => {\n              await sendNFT(signer, selectedCrucible, sendAddress);\n              setModalIsOpen(false);\n            }}\n          >\n            Send\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n\n  // Todo: Add empty state\n  return (\n    <>\n      {modalIsOpen &&\n        (modalOperation === \"send\" ? (\n          sendModal\n        ) : (\n          <Modal isOpen onClose={() => setModalIsOpen(false)}>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalHeader>\n                {modalOperation === \"withdraw\" ? \"Withdraw\" : \"Unstake\"}\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <FormControl mb={4}>\n                  <FormLabel>Amount</FormLabel>\n                  <Input\n                    size=\"lg\"\n                    variant=\"filled\"\n                    _focus={{ borderColor: \"green.300\" }}\n                    value={amount2Withdraw}\n                    onChange={formatAmount2Withdraw}\n                    name=\"balance\"\n                    placeholder=\"0.0\"\n                    type=\"number\"\n                  />\n                </FormControl>\n              </ModalBody>\n\n              <ModalFooter>\n                <Button\n                  bg=\"green.300\"\n                  color=\"white\"\n                  mr={3}\n                  onClick={\n                    modalOperation === \"withdraw\"\n                      ? () => withdrawTokens\n                      : () => unstake\n                  }\n                >\n                  {modalOperation === \"withdraw\" ? \"Withdraw\" : \"Unstake\"}\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        ))}\n\n      {crucibles.map((crucible) => {\n        return (\n          <Box\n            p={4}\n            mb={6}\n            bg={cruciblesCardBg}\n            boxShadow=\"md\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            flexDirection={\"column\"}\n          >\n            <Box mb={4}>\n              <Text\n                as=\"div\"\n                fontSize=\"lg\"\n                textAlign={[\"center\", \"center\", \"left\"]}\n              >\n                <Flex justifyContent=\"space-between\">\n                  <HStack>\n                    <Box mr={2}>\n                      <strong>Balance:</strong> {`${crucible[\"balance\"]}`}\n                    </Box>\n                    <Badge py={1} px={2} borderRadius=\"xl\" fonSize=\"2em\">\n                      <HStack>\n                        <Box>{crucible[\"lockedBalance\"]}</Box>\n                        <FaLock />\n                      </HStack>\n                    </Badge>\n                  </HStack>\n                  <Box fontSize=\"sm\" color=\"gray.400\">\n                    ID: {crucible[\"id\"]}\n                  </Box>\n                </Flex>\n              </Text>\n            </Box>\n            <ButtonGroup\n              isAttached\n              variant=\"outline\"\n              mb={[4, 4, 0]}\n              width=\"100%\"\n            >\n              <Button\n                isFullWidth\n                color=\"white\"\n                borderWidth={1}\n                borderColor={cruciblesCardBg}\n                background=\"green.300\"\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ background: \"green.400\" }}\n                onClick={() => {\n                  setModalOperation(\"unstake\");\n                  setSelectedCrucible(crucible[\"id\"]);\n                  setModalIsOpen(true);\n                }}\n              >\n                Unstake\n              </Button>\n              <Button\n                isFullWidth\n                color=\"white\"\n                borderWidth={1}\n                borderColor={cruciblesCardBg}\n                background=\"green.300\"\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ background: \"green.400\" }}\n                onClick={() => {\n                  setModalOperation(\"withdraw\");\n                  setSelectedCrucible(crucible[\"id\"]);\n                  setModalIsOpen(true);\n                }}\n              >\n                Withdraw\n              </Button>\n              <Button\n                isFullWidth\n                color=\"white\"\n                borderWidth={1}\n                borderColor={cruciblesCardBg}\n                background=\"green.300\"\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ background: \"green.400\" }}\n                onClick={() => {\n                  setModalOperation(\"send\");\n                  setSelectedCrucible(crucible[\"id\"]);\n                  setModalIsOpen(true);\n                }}\n              >\n                Send\n              </Button>\n            </ButtonGroup>\n          </Box>\n        );\n      })}\n      {isConnected ? (\n        <></>\n      ) : (\n        <Button\n          size=\"lg\"\n          isFullWidth\n          color=\"white\"\n          background=\"green.300\"\n          _focus={{ boxShadow: \"none\" }}\n          _hover={{ background: \"green.400\" }}\n          onClick={() => onboard.walletSelect()}\n        >\n          Connect Wallet\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default OperatePane;\n","import React, { useState, useContext } from \"react\";\nimport OperatePane from \"./OperatePane\";\nimport Web3Context from \"../../../../../Web3Context\";\n\nconst Operate: React.FC = () => {\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const { wallet, address } = useContext(Web3Context);\n\n  if (!!errorMsg) {\n    return <span>{errorMsg}</span>;\n  } else {\n    return (\n      <OperatePane\n        handleInputChange={(form) => {}}\n        isConnected={!!wallet.provider}\n      />\n    );\n  }\n};\n\nexport default Operate;\n","import React from \"react\";\nimport { Box, Center } from \"@chakra-ui/layout\";\nimport { SwapPane, OperatePane } from \"./TabContent/Panes\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/tabs\";\n\ninterface WidgetProps {}\n\nconst Widget: React.FC<WidgetProps> = () => {\n  const cardBgColor = useColorModeValue(\"white\", \"gray.700\");\n  const tabsBgColor = useColorModeValue(\"gray.50\", \"gray.600\");\n\n  return (\n    <Center>\n      <Box\n        shadow=\"xl\"\n        borderRadius=\"2xl\"\n        bg={cardBgColor}\n        borderWidth={1}\n        width={[\"100%\", 540, 540]}\n      >\n        <Tabs isFitted>\n          <TabList\n            px={8}\n            height=\"70px\"\n            bg={tabsBgColor}\n            borderTopLeftRadius=\"2xl\"\n            borderTopRightRadius=\"2xl\"\n          >\n            <Tab\n              fontSize=\"xl\"\n              fontWeight={500}\n              _selected={{\n                color: \"inherit\",\n                borderColor: \"green.300\",\n                borderBottomWidth: 3,\n              }}\n            >\n              Mint\n            </Tab>\n            <Tab\n              fontSize=\"xl\"\n              fontWeight={500}\n              _selected={{\n                color: \"inherit\",\n                borderColor: \"green.300\",\n                borderBottomWidth: 3,\n              }}\n            >\n              Crucibles\n            </Tab>\n          </TabList>\n\n          <TabPanels p={4} maxH=\"480px\">\n            <TabPanel>\n              <SwapPane />\n            </TabPanel>\n            <TabPanel>\n              <OperatePane />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Center>\n  );\n};\n\nexport default Widget;\n","import Widget from \"../Widget\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Text } from \"@chakra-ui/layout\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst Body: React.FC = () => {\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true);\n  }, []);\n\n  return (\n    <Box textAlign=\"center\" mt={[8, 16, 24]}>\n      <Heading size=\"lg\" mb={2}>\n        Alchemist\n      </Heading>\n      <Text fontSize=\"lg\" color=\"gray.500\" mb={16}>\n        The only plan is there is no plan{\" \"}\n        <span role=\"img\" aria-label=\"alchemist logo\">\n          ⚗️\n        </span>\n      </Text>\n      <CSSTransition in={inProp} timeout={1000} classNames=\"fade\">\n        <Widget />\n      </CSSTransition>\n    </Box>\n  );\n};\n\nexport default Body;\n","import { Box, Flex } from \"@chakra-ui/layout\";\nimport Footer from \"../views/Footer\";\nimport Header from \"../views/Header\";\nimport Body from \"../views/Body\";\nimport React from \"react\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\ninterface LayoutProps {}\n\nconst Layout: React.FC<LayoutProps> = () => {\n  const bgColor = useColorModeValue(\"gray.50\", \"gray.800\");\n\n  return (\n    <Flex\n      minHeight=\"100vh\"\n      flexDirection=\"column\"\n      backgroundColor={bgColor}\n      px={[4, 4, 12]}\n    >\n      <Header />\n      <Box flexGrow={1}>\n        <Body />\n      </Box>\n      <Footer />\n    </Flex>\n  );\n};\nexport default Layout;\n","import { extendTheme, ThemeConfig, theme } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n};\n\nconst customTheme = extendTheme({\n  config,\n  colors: {\n    green: {\n      50: \"#defef5\",\n      100: \"#b8f3e5\",\n      200: \"#91ebd3\",\n      300: \"#67e1c1\",\n      400: \"#40d9b0\",\n      500: \"#26bf96\",\n      600: \"#199575\",\n      700: \"#0b6a53\",\n      800: \"#004131\",\n      900: \"#001710\",\n    },\n  },\n  fonts: {\n    heading: \"Work Sans\",\n    body: \"Work Sans\",\n  },\n  components: {\n    Heading: {\n      baseStyle: {\n        fontWeight: \"500\",\n      },\n    },\n    Link: {\n      baseStyle: {\n        _hover: {\n          textDecoration: \"none\",\n          color: \"green.300\",\n        },\n      },\n    },\n    Alert: {\n      baseStyle: {\n        borderRadius: theme.radii[\"2xl\"],\n      },\n    },\n    Input: {\n      baseStyle: {\n        _focus: {\n          borderColor: \"green.300\",\n          borderWidth: \"2px\",\n        },\n      },\n    },\n    Button: {\n      baseStyle: {\n        fontWeight: \"500\",\n      },\n    },\n  },\n});\n\nexport default customTheme;\n","import React from \"react\";\nimport Layout from \"./layouts\";\nimport { Web3Provider } from \"./Web3Context\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./config/theme\";\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <ChakraProvider theme={theme}>\n        <Web3Provider>\n          <Layout />\n        </Web3Provider>\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/color-mode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport theme from \"./config/theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"../src/styles/transitions.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}